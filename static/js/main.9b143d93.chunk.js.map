{"version":3,"sources":["api/fetchCalls.js","components/Loader/Loader.js","components/SignIn/SignInPage/SignInPage.js","components/SignIn/SignUpPage/SignUpPage.js","components/Project/Project.js","components/Project/ProjectDelete/ProjectDelete.js","components/Project/ProjectCreate/ProjectCreate.js","components/Project/ProjectPage/ProjectPage.js","components/Task/Task.js","components/Task/TaskCreate/TaskCreate.js","components/Task/TaskDelete/TaskDelete.js","components/Project/ProjectView/ProjectView.js","components/Project/ProjectMain.js","App.js","index.js"],"names":["URL","createProject","data","user","fetch","method","body","JSON","stringify","headers","token","then","response","json","Loader","className","SignInPage","setUser","useState","username","setUsername","password","setPassword","error","setError","loading","setLoading","history","useHistory","handleSubmit","event","a","preventDefault","Promise","resolve","res","err","localStorage","setItem","push","onSubmit","type","name","autoComplete","value","onChange","target","style","color","to","SignUpPage","confirmPassword","setConfirmPassword","Project","project","setPDelete","setProjToDelete","title","description","tasks","length","_id","href","onClick","ProjectDelete","projToDelete","id","setTimeout","ProjectCreate","setPCreate","setTitle","setDescription","useProjects","setProject","useEffect","getProjects","projectArray","i","ProjectPage","pdelete","pcreate","projects","Task","task","setTaskDelete","setTaskToDelete","completed","setCompleted","handleCheck","checked","priority","width","paddingLeft","textAlign","marginRight","TaskCreate","projid","setTCreate","setPriority","TaskDelete","taskToDelete","url","useRouteMatch","useProject","setBusy","fetchProjectAPI","getTasks","order","taskDelete","taskArray","sortTasks","sortOrder","sort","b","ProjectView","busy","setOrder","tcreate","useParams","alignItems","marginBottom","ProjectMain","setProjects","clear","path","exact","component","App","parse","getItem","fetchUserStorage","from","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAEMA,EAAM,4CAkDCC,EAAgB,SAACC,EAAMC,GAClC,OAAOC,MAAM,GAAD,OAAIJ,EAAJ,oBAA2B,CACrCK,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChB,aAAcN,EAAKO,SAEpBC,MAAK,SAACC,GAAD,OAAcA,EAASC,W,uBCjDlBC,G,MARA,WACb,OACE,qBAAKC,UAAU,kBAAf,SACE,qBAAKA,UAAU,sBCyFNC,G,MAzFI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACFC,mBAAS,IADP,mBAC3BC,EAD2B,KACjBC,EADiB,OAEFF,mBAAS,IAFP,mBAE3BG,EAF2B,KAEjBC,EAFiB,OAGRJ,mBAAS,IAHD,mBAG3BK,EAH2B,KAGpBC,EAHoB,OAKJN,oBAAS,GALL,mBAK3BO,EAL2B,KAKlBC,EALkB,KAO9BC,EAAUC,cAERC,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,yDACnBD,EAAME,iBACDb,GAAaE,EAFC,uBAGjBG,EAAS,gCACTF,EAAY,IAJK,0BAOjBE,EAAS,IAPQ,cASnBE,GAAW,GACLvB,EAAO,CACXgB,SAAUA,EACVE,SAAUA,GAZO,UAcDY,QAAQC,SFNJhC,EEMsBC,EFLvCC,MAAM,GAAD,OAAIJ,EAAJ,eAAsB,CAChCK,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,sBAEjBE,MAAK,SAACC,GAAD,OAAcA,EAASC,YEfV,WAcbsB,EAda,OAenBT,GAAW,IACPS,EAAIC,IAhBW,wBAiBjBZ,EAASW,EAAIC,KACbd,EAAY,IAlBK,2BAqBjBe,aAAaC,QAAQ,OAAQ/B,KAAKC,UAAU2B,EAAIhC,OAChDc,EAAQkB,EAAIhC,MACZwB,EAAQY,KAAK,YAvBI,kCFQE,IAACrC,IERH,OAAH,sDA2BlB,OACE,gCACGuB,EAAU,cAAC,EAAD,IAAa,KACxB,sBAAKV,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,SACE,4CACa,gDAIf,uBAAMA,UAAU,eAAeyB,SAAUX,EAAzC,UACE,uBAAOd,UAAU,oBAAjB,uBACA,uBACA,uBACEA,UAAU,qBACV0B,KAAK,OACLC,KAAK,WACLC,aAAa,MACbC,MAAOzB,EACP0B,SAAU,SAACf,GAAD,OAAWV,EAAYU,EAAMgB,OAAOF,UAGhD,uBACA,uBAAO7B,UAAU,oBAAjB,uBACA,uBACA,uBACEA,UAAU,qBACV0B,KAAK,WACLC,KAAK,WACLC,aAAa,MACbC,MAAOvB,EACPwB,SAAU,SAACf,GAAD,OAAWR,EAAYQ,EAAMgB,OAAOF,UAGhD,uBACA,uBACE7B,UAAU,sBACV0B,KAAK,SACLG,MAAM,eAGV,sBAAMG,MAAO,CAAEC,MAAO,OAAtB,SAAgCzB,GAAgB,OAChD,oBAAGR,UAAU,kBAAb,mCACyB,IACvB,cAAC,IAAD,CAAMA,UAAU,eAAekC,GAAG,eAAlC,sCCoBKC,EArGI,SAAC,GAAiB,IAAfjC,EAAc,EAAdA,QAAc,EACFC,mBAAS,IADP,mBAC3BC,EAD2B,KACjBC,EADiB,OAEFF,mBAAS,IAFP,mBAE3BG,EAF2B,KAEjBC,EAFiB,OAGYJ,mBAAS,IAHrB,mBAG3BiC,EAH2B,KAGVC,EAHU,OAIRlC,mBAAS,IAJD,mBAI3BK,EAJ2B,KAIpBC,EAJoB,OAMJN,oBAAS,GANL,mBAM3BO,EAN2B,KAMlBC,EANkB,KAO9BC,EAAUC,cAERC,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,yDACnBD,EAAME,iBACDb,GAAaE,GAAa8B,EAFZ,uBAGjB3B,EAAS,gCACTF,EAAY,IACZ8B,EAAmB,IALF,6BAQf/B,IAAa8B,EARE,wBASjB3B,EAAS,2BACTF,EAAY,IACZ8B,EAAmB,IAXF,kCAcnB1B,GAAW,GACLvB,EAAO,CACXgB,SAAUA,EACVE,SAAUA,GAjBO,UAmBDY,QAAQC,SHpBHhC,EGoBsBC,EHnBxCC,MAAM,GAAD,OAAIJ,EAAJ,gBAAuB,CACjCK,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,sBAEjBE,MAAK,SAACC,GAAD,OAAcA,EAASC,YGNV,WAmBbsB,EAnBa,OAoBnBT,GAAW,IACPS,EAAIC,IArBW,wBAsBjBZ,EAASW,EAAIC,KAtBI,2BAyBjBC,aAAaC,QAAQ,OAAQ/B,KAAKC,UAAU2B,EAAIhC,OAChDc,EAAQkB,EAAIhC,MACZwB,EAAQY,KAAK,YA3BI,kCHDG,IAACrC,IGCJ,OAAH,sDA+BlB,OACE,gCACGuB,EAAU,cAAC,EAAD,IAAa,KACxB,sBAAKV,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,SACE,6CACc,gDAIhB,uBAAMA,UAAU,eAAeyB,SAAUX,EAAzC,UACE,uBAAOd,UAAU,oBAAjB,yBACA,uBACA,uBACE0B,KAAK,OACL1B,UAAU,qBACV4B,aAAa,MACbD,KAAK,WACLE,MAAOzB,EACP0B,SAAU,SAACf,GAAD,OAAWV,EAAYU,EAAMgB,OAAOF,UAEhD,uBACA,uBAAO7B,UAAU,oBAAjB,uBACA,uBACA,uBACE0B,KAAK,WACL1B,UAAU,qBACV4B,aAAa,MACbD,KAAK,WACLE,MAAOvB,EACPwB,SAAU,SAACf,GAAD,OAAWR,EAAYQ,EAAMgB,OAAOF,UAEhD,uBACA,uBAAO7B,UAAU,oBAAjB,+BAvBF,IAuBiE,uBAC/D,uBACE0B,KAAK,WACL1B,UAAU,qBACV4B,aAAa,MACbD,KAAK,kBACLE,MAAOO,EACPN,SAAU,SAACf,GAAD,OAAWsB,EAAmBtB,EAAMgB,OAAOF,UAEvD,uBACA,uBACE7B,UAAU,sBACV0B,KAAK,SACLG,MAAM,sBAGV,sBAAMG,MAAO,CAAEC,MAAO,OAAtB,SAAgCzB,GAAgB,OAChD,oBAAGR,UAAU,kBAAb,qCAC2B,IACzB,cAAC,IAAD,CAAMA,UAAU,eAAekC,GAAG,eAAlC,+BC9DKI,G,MA/BC,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,gBACtC,OACE,sBAAKzC,UAAU,wCAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,oBAAGA,UAAU,gBAAb,UACGuC,EAAQG,MAAO,IAChB,sBAAM1C,UAAU,sBAAhB,SAAuCuC,EAAQI,iBAEjD,oBAAG3C,UAAU,gBAAb,UAA8BuC,EAAQK,MAAMC,OAA5C,eAEF,sBAAK7C,UAAU,SAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,IAAD,CAAMkC,GAAE,mBAAcK,EAAQO,KAA9B,oBAEF,qBAAK9C,UAAU,eAAf,SACE,mBACE+C,KAAK,IACL/C,UAAU,eACVgD,QAAS,WACPR,GAAW,GACXC,EAAgBF,IALpB,8BCwBKU,EAvCO,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,aAAcV,EAAiB,EAAjBA,WACjC5B,EAAUC,cACVsC,EAAKD,EAAaJ,IAEhBhC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACnBD,EAAME,iBADa,SAEbC,QAAQC,SLqDYhC,EKrDUgE,OLsDtC9D,MAAM,GAAD,OAAIJ,EAAJ,qBAAoBE,EAApB,WAAmC,CACtCG,OAAQ,OACRI,QAAS,CACP,eAAgB,wBK3DC,OAGnB0D,YAAW,WACTxC,EAAQY,KAAK,cACZ,KALgB,iCLuDM,IAACrC,IKvDP,OAAH,sDAQlB,OACE,qBAAKa,UAAU,sBAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,uBAAMyB,SAAUX,EAAhB,UACE,uBAAOd,UAAU,qBAAjB,2DAGA,uBACA,sBAAKA,UAAU,uCAAf,UACE,uBACEA,UAAU,6BACV0B,KAAK,SACLG,MAAM,QAER,uBACE7B,UAAU,6BACV0B,KAAK,SACLG,MAAM,SACNmB,QAAS,kBAAMR,GAAW,iBCyBzBa,EAvDO,SAAC,GAA0B,IAAxBjE,EAAuB,EAAvBA,KAAMkE,EAAiB,EAAjBA,WACzB1C,EAAUC,cADgC,EAEpBV,mBAAS,IAFW,mBAEvCuC,EAFuC,KAEhCa,EAFgC,OAGRpD,mBAAS,IAHD,mBAGvCwC,EAHuC,KAG1Ba,EAH0B,KAKxC1C,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACnBD,EAAME,iBACAsB,EAAU,CACdG,MAAOA,EACPC,YAAaA,GAJI,SAMbzB,QAAQC,QAAQjC,EAAcqD,EAASnD,IAN1B,OAOnBkE,GAAW,GACXF,YAAW,kBAAMxC,EAAQY,KAAK,cAAa,KARxB,2CAAH,sDAWlB,OACE,qBAAKxB,UAAU,eAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,oBAAoBgD,QAAS,kBAAMM,GAAW,IAA7D,eAGA,qBAAKtD,UAAU,qBAAf,gCACA,uBAAMyB,SAAUX,EAAhB,UACE,uBAAOd,UAAU,oBAAjB,mBACA,uBACA,uBACEA,UAAU,qBACV0B,KAAK,OACLI,SAAU,SAACf,GAAD,OAAWwC,EAASxC,EAAMgB,OAAOF,QAC3CA,MAAOa,IAGT,uBACA,uBAAO1C,UAAU,oBAAjB,0BACA,uBACA,uBACEA,UAAU,qBACV0B,KAAK,OACLI,SAAU,SAACf,GAAD,OAAWyC,EAAezC,EAAMgB,OAAOF,QACjDA,MAAOc,IAGT,uBACA,uBACE3C,UAAU,6BACV0B,KAAK,SACLG,MAAM,oBCJZ4B,EAAc,SAACrE,EAAMuB,EAAY6B,EAAYC,GAAqB,IAAD,EACvCtC,mBAAS,MAD8B,mBAC9DoC,EAD8D,KACrDmB,EADqD,KAGrEC,qBAAU,YACS,uCAAG,sBAAA3C,EAAA,6DAClBL,GAAW,GADO,KAElB+C,EAFkB,SAEDxC,QAAQC,SPpBDhC,EOoBuBC,EPnB5CC,MAAM,GAAD,OAAIJ,EAAJ,aAAoB,CAC9BK,OAAQ,MACRI,QAAS,CACP,eAAgB,mBAChB,aAAcP,EAAKQ,SAEpBC,MAAK,SAACC,GAAD,OAAcA,EAASC,YOWT,kCAGlBa,GAAW,GAHO,iCPlBK,IAACxB,IOkBN,OAAH,qDAKjByE,KAEC,IAEH,IAAIC,EAAe,GACnB,IAAK,IAAIC,KAAKvB,EACZsB,EAAarC,KACX,cAAC,EAAD,CACEe,QAASA,EAAQuB,GACjBtB,WAAYA,EACZC,gBAAiBA,GACZqB,IAKX,OAAOD,GAGME,EApEK,SAAC,GAAc,IAAZ3E,EAAW,EAAXA,KAAW,EACFe,oBAAS,GADP,mBACzBO,EADyB,KAChBC,EADgB,OAGFR,oBAAS,GAHP,mBAGzB6D,EAHyB,KAGhBxB,EAHgB,OAIQrC,mBAAS,MAJjB,mBAIzB+C,EAJyB,KAIXT,EAJW,OAMFtC,oBAAS,GANP,mBAMzB8D,EANyB,KAMhBX,EANgB,KAO1BY,EAAWT,EAAYrE,EAAMuB,EAAY6B,EAAYC,GAM3D,OACE,sBAAKzC,UAAU,iBAAf,UACGU,EAAU,cAAC,EAAD,IAAa,KACxB,sBAAKV,UAAU,SAAf,UACE,sBAAKA,UAAU,uCAAf,UACE,sBAAKA,UAAU,YAAf,UACE,oBAAGA,UAAU,eAAb,mBAAmCZ,EAAKgB,SAAxC,OACA,oBAAGJ,UAAU,iBAAb,sBACYkE,EAAWA,EAASrB,OAAS,EADzC,oBAIF,qBAAK7C,UAAU,wBAAwBgD,QAfnB,WAC1BM,GAAW,IAcL,SACE,wDAGHU,EACC,cAAC,EAAD,CAAed,aAAcA,EAAcV,WAAYA,IACrD,KAEHyB,EAAU,cAAC,EAAD,CAAe7E,KAAMA,EAAMkE,WAAYA,IAAiB,KAEnE,qBAAKtD,UAAU,UAAf,SAA0BkE,WCenBC,G,MApDF,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,gBAAsB,EACvBnE,mBAASiE,EAAKG,WADS,mBAClDA,EADkD,KACvCC,EADuC,KAGnDC,EAAc,WRoFc,IAACtF,IQnFZiF,ERoFvB/E,MAAM,GAAD,OAAIJ,EAAJ,iBAAgBE,EAAK2D,IAArB,WAAmC,CACtCxD,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,uBQrFpB,OACE,sBAAKM,UAAU,eAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,uBACEA,UAAU,gBACV0B,KAAK,WACLgD,QAASH,EACTzC,SAAU,WACRsC,EAAKG,WAAaH,EAAKG,UACvBC,EAAaJ,EAAKG,WAClBE,OAGJ,qBAAKzE,UAAS,UAAKuE,EAAY,YAAc,KAA/B,cAAd,SACGH,EAAKzB,iBAGV,sBAAK3C,UAAU,mBAAf,UACE,sBAAKA,UAAS,UAAKoE,EAAKO,SAAV,oBAAd,UACGP,EAAKO,SADR,eAGA,qBACE3E,UAAU,eACVgC,MAAO,CACL4C,MAAO,MACPC,YAAa,MACbC,UAAW,QACXC,YAAa,KANjB,SASE,mBACEhC,KAAK,IACL/C,UAAU,eACVgD,QAAS,WACPqB,GAAc,GACdC,EAAgBF,IALpB,8BCiDKY,EAtFI,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WACxBtE,EAAUC,cAD+B,EAEPV,mBAAS,IAFF,mBAEtCwC,EAFsC,KAEzBa,EAFyB,OAGbrD,mBAAS,IAHI,mBAGtCwE,EAHsC,KAG5BQ,EAH4B,KAavCrE,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACnBD,EAAME,iBACAmD,EAAO,CACXzB,YAAaA,EACbgC,SAAUA,EACVpC,QAAS0C,GALQ,SAOb/D,QAAQC,STgDShC,EShDUiF,OTiDnC/E,MAAM,GAAD,OAAIJ,EAAJ,iBAAgBE,EAAKoD,QAArB,WAAuC,CAC1CjD,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,wBS5DC,OAQnB0D,YAAW,kBAAMxC,EAAQY,KAAR,mBAAyByD,MAAW,KARlC,iCTuDG,IAAC9F,ISvDJ,OAAH,sDAWlB,OACE,qBAAKa,UAAU,eAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,oBAAoBgD,QAAS,kBAAMkC,GAAW,IAA7D,eAGA,qBAAKlF,UAAU,qBAAf,6BACA,uBAAMyB,SAAUX,EAAhB,UACE,uBAAOd,UAAU,oBAAjB,yBACA,uBACA,uBACEA,UAAU,qBACV0B,KAAK,OACLC,KAAK,cACLE,MAAOc,EACPb,SAlCgB,SAACf,GACzByC,EAAezC,EAAMgB,OAAOF,UAoCtB,uBACA,wBAAOC,SAlCQ,SAACf,GACtBoE,EAAYpE,EAAMgB,OAAOF,QAiCnB,UACE,qBAAK7B,UAAU,iBAAf,sBACA,uBACA,wBAAOA,UAAU,2BAAjB,UACE,uBACEA,UAAU,qBACV0B,KAAK,QACLC,KAAK,WACLE,MAAM,QALV,SASA,wBAAO7B,UAAU,2BAAjB,UACE,uBACEA,UAAU,qBACV0B,KAAK,QACLC,KAAK,WACLE,MAAM,WALV,YASA,wBAAO7B,UAAU,2BAAjB,UACE,uBACEA,UAAU,qBACV0B,KAAK,QACLC,KAAK,WACLE,MAAM,SALV,aAUF,uBACA,uBACE7B,UAAU,gDACV0B,KAAK,SACLG,MAAM,iBCrCHuD,EAzCI,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,aAAchB,EAAoB,EAApBA,cAC9BzD,EAAUC,cACRyE,EAAQC,cAARD,IACFnC,EAAKkC,EAAavC,IAEhBhC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACnBD,EAAME,iBADa,SAEbC,QAAQC,SVuEShC,EUvEUgE,OVwEnC9D,MAAM,GAAD,OAAIJ,EAAJ,iBAAgBE,EAAhB,WAA+B,CAClCG,OAAQ,OACRI,QAAS,CACP,eAAgB,wBU7EC,OAGnB0D,YAAW,WACTiB,GAAc,GACdzD,EAAQY,KAAK8D,KACZ,KANgB,iCVyEG,IAACnG,IUzEJ,OAAH,sDASlB,OACE,qBAAKa,UAAU,sBAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,uBAAMyB,SAAUX,EAAhB,UACE,uBAAOd,UAAU,qBAAjB,wDAGA,uBACA,sBAAKA,UAAU,uCAAf,UACE,uBACEA,UAAU,6BACV0B,KAAK,SACLG,MAAM,QAER,uBACE7B,UAAU,6BACV0B,KAAK,SACLG,MAAM,SACNmB,QAAS,kBAAMqB,GAAc,iBC4DrCmB,EAAa,SAACrC,EAAIsC,GAAa,IAAD,EACJtF,mBAAS,MADL,mBAC3BoC,EAD2B,KAClBmB,EADkB,KAYlC,OAVAC,qBAAU,YACa,uCAAG,sBAAA3C,EAAA,uEXxDC7B,EWyDJgE,EXxDhB9D,MAAM,GAAD,OAAIJ,EAAJ,qBAAoBE,EAApB,eAAuC,CACjDG,OAAQ,MACRI,QAAS,CACP,eAAgB,sBAEjBE,MAAK,SAACC,GAAD,OAAcA,EAASC,WWmDJF,MAAK,SAACC,GAC3B4F,GAAQ,GACR/B,EAAW7D,GACX4F,GAAQ,MAJY,iCXxDA,IAACtG,IWwDD,OAAH,qDAOrBuG,KACC,CAACvC,EAAIsC,IACDlD,GAGHoD,EAAW,SAACpD,EAASqD,EAAOC,EAAYvB,GAC5C,GAAK/B,EAAL,CACA,IAAIuD,EAAY,GAEhB,IAAK,IAAIhC,KADTvB,EAAQK,MAAQmD,EAAUxD,EAAQK,MAAOgD,GAC3BrD,EAAQK,MACpBkD,EAAUtE,KACR,cAAC,EAAD,CAEE4C,KAAM7B,EAAQK,MAAMkB,GACpBO,cAAewB,EACfvB,gBAAiBA,GAHZR,IAOX,OAAOgC,IAGHC,EAAY,SAACnD,EAAOoD,GAsBxB,OArBApD,EAAMqD,MAAK,SAACjF,EAAGkF,GACb,MACiB,SAAflF,EAAE2D,UACc,QAAfuB,EAAEvB,UAAqC,WAAfuB,EAAEvB,SAKZ,QAAf3D,EAAE2D,UACc,SAAfuB,EAAEvB,UAAsC,WAAfuB,EAAEvB,SAIX,WAAf3D,EAAE2D,UAAwC,SAAfuB,EAAEvB,SACV,IAAdqB,EAAkB,GAAK,EAEb,WAAfhF,EAAE2D,UAAwC,QAAfuB,EAAEvB,SACV,IAAdqB,GAAmB,EAAI,EAEzB,EARgB,IAAdA,EAAkB,GAAK,EANT,IAAdA,GAAmB,EAAI,KAgB3BpD,GAGMuD,EAjJK,WAAO,IAAD,EACAhG,oBAAS,GADT,mBACjBiG,EADiB,KACXX,EADW,OAEEtF,mBAAS,GAFX,mBAEjByF,EAFiB,KAEVS,EAFU,OAGYlG,oBAAS,GAHrB,mBAGjB0F,EAHiB,KAGLxB,EAHK,OAIgBlE,mBAAS,MAJzB,mBAIjBkF,EAJiB,KAIHf,EAJG,OAMMnE,oBAAS,GANf,mBAMjBmG,EANiB,KAMRpB,EANQ,KAQhBD,EAAWsB,cAAXtB,OAEF1C,EAAUiD,EAAWP,EAAQQ,GAC/B7C,EAAQ+C,EAASpD,EAASqD,EAAOvB,EAAeC,GAEhD1D,EAAUC,cAMd,OAAOuF,EACL,cAAC,EAAD,IAEA,sBAAKpG,UAAU,iBAAf,UACGsG,EAAU,cAAC,EAAD,CAAYpB,WAAYA,EAAYD,OAAQA,IAAa,KACpE,qBAAKjF,UAAU,mBAAf,SACE,sBAAKA,UAAU,uCAAf,UACE,qBAAKA,UAAU,UAAf,SACE,mBACEgD,QAbQ,WAClBpC,EAAQY,KAAK,aAaHxB,UAAU,uCAGd,sBAAKA,UAAU,SAAf,UACE,mBAAGA,UAAU,6BAAb,SAA2CuC,EAAQG,QAAW,IAC9D,mBAAG1C,UAAU,mCAAb,SACGuC,EAAQI,iBAGb,6BAIJ,sBAAK3C,UAAU,sCAAf,UACE,sBAAKA,UAAU,wCAAf,UACE,sBAAKA,UAAU,YAAf,UACE,sBAAMA,UAAU,sBAAhB,2BAA2D,IAC3D,uBAAMA,UAAU,sBAAhB,cACIuC,EAAQK,MAAMC,OADlB,gBAIF,sBAAK7C,UAAU,mBAAmBgC,MAAO,CAAEwE,WAAY,YAAvD,UACE,sBACExG,UAAU,WACVgD,QAAS,WACPqD,EAAmB,IAAVT,GAAe,EAAI,GAC5BG,EAAUnD,EAAOgD,IAJrB,qBAOU,mBAAG5F,UAAU,mBAEvB,qBACEgC,MAAO,CACL4C,MAAO,cACPG,YAAa,MACb0B,aAAc,QAJlB,SAOE,qBACEzG,UAAU,wBACVgD,QAAS,kBAAMkC,GAAW,IAF5B,SAIE,mDAKPW,EACC,cAAC,EAAD,CACExB,cAAeA,EACfgB,aAAcA,IAEd,KACJ,qBAAKrF,UAAU,iBAAf,SAAiC4C,WC5C1B8D,EAxCK,SAAC,GAA2B,IAAzBtH,EAAwB,EAAxBA,KACjBwB,GADyC,EAAlB+F,YACb9F,eAMd,OACE,sBAAKb,UAAU,iBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,yDAAf,UACE,0CACA,sBAAKA,UAAU,gBAAgBgD,QAVlB,WACnB1B,aAAasF,QACbhG,EAAQY,KAAK,YAQP,qBACU,mBAAGxB,UAAU,gCAI3B,qBAAKA,UAAU,SAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE6G,KAAK,WACLC,OAAK,EACLC,UAAW,kBAAM,cAAC,EAAD,CAAa3H,KAAMA,OAEtC,cAAC,IAAD,CACEyH,KAAK,sBACLC,OAAK,EACLC,UAAW,kBAAM,cAAC,EAAD,OAEnB,cAAC,IAAD,CACEF,KAAK,mBACLC,OAAK,EACLC,UAAW,kBAAM,cAAC,EAAD,gBCHdC,G,MAzBH,WAAO,IAAD,EACQ7G,mBbPM,WAC9B,IAEE,OADaX,KAAKyH,MAAM3F,aAAa4F,QAAQ,SAE7C,MAAO7F,GACP,MAAO,CAAEA,QaEsB8F,IADjB,mBACT/H,EADS,KACHc,EADG,OAEgBC,mBAAS,IAFzB,mBAECwG,GAFD,WAIhB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEE,KAAK,eACLC,OAAK,EACLC,UAAW,kBAAM,cAAC,EAAD,CAAY7G,QAASA,OAExC,cAAC,IAAD,CACE2G,KAAK,eACLC,OAAK,EACLC,UAAW,kBAAM,cAAC,EAAD,CAAY7G,QAASA,OAExC,cAAC,IAAD,CACE2G,KAAK,WACLE,UAAW,kBAAM,cAAC,EAAD,CAAa3H,KAAMA,EAAMuH,YAAaA,OAEzD,cAAC,IAAD,CAAUS,KAAK,IAAIlF,GAAG,sBCzB5BmF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.9b143d93.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\n\nconst URL = \"https://pure-crag-82741.herokuapp.com/api\";\n\nexport const fetchUserStorage = () => {\n  try {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    return user;\n  } catch (err) {\n    return { err };\n  }\n};\n\nexport const createUser = (data) => {\n  return fetch(`${URL}/user/create`, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n};\n\nexport const loginUser = (data) => {\n  return fetch(`${URL}/user/login`, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n};\n\nexport const fetchProjects = (data) => {\n  return fetch(`${URL}/projects`, {\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"user-token\": data.token,\n    },\n  }).then((response) => response.json());\n};\n\nexport const fetchProject = (data) => {\n  return fetch(`${URL}/projects/${data}/getproject`, {\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n};\n\nexport const createProject = (data, user) => {\n  return fetch(`${URL}/projects/create`, {\n    method: \"post\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"user-token\": user.token,\n    },\n  }).then((response) => response.json());\n};\n\nexport const deleteProject = (data) => {\n  fetch(`${URL}/projects/${data}/delete`, {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n};\n\nexport const createTask = (data) => {\n  fetch(`${URL}/task/${data.project}/create`, {\n    method: \"post\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n};\n\nexport const deleteTask = (data) => {\n  fetch(`${URL}/task/${data}/delete`, {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n};\n\nexport const updateTaskCompletion = (data) => {\n  fetch(`${URL}/task/${data._id}/update`, {\n    method: \"post\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n};\n","import React from \"react\";\nimport \"./Loader.css\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loading-overlay\">\n      <div className=\"loading-wheel\"></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { loginUser } from \"../../../api/fetchCalls\";\nimport Loader from \"../../Loader/Loader\";\nimport \"./SignIn.css\";\n\nconst SignInPage = ({ setUser }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n\n  let history = useHistory();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (!username || !password) {\n      setError(\"Cannot Leave Any Field Blank\");\n      setPassword(\"\");\n      return;\n    } else {\n      setError(\"\");\n    }\n    setLoading(true);\n    const user = {\n      username: username,\n      password: password,\n    };\n    const res = await Promise.resolve(loginUser(user));\n    setLoading(false);\n    if (res.err) {\n      setError(res.err);\n      setPassword(\"\");\n      return;\n    } else {\n      localStorage.setItem(\"user\", JSON.stringify(res.user));\n      setUser(res.user);\n      history.push(\"/project\");\n    }\n  };\n\n  return (\n    <div>\n      {loading ? <Loader /> : null}\n      <div className=\"sign-in-div\">\n        <div className=\"sign-in-text\">\n          <p>\n            Sign in to <span>Too-Doo</span>\n          </p>\n        </div>\n\n        <form className=\"sign-in-form\" onSubmit={handleSubmit}>\n          <label className=\"sign-in-form-text\">Username:</label>\n          <br />\n          <input\n            className=\"sign-in-form-input\"\n            type=\"text\"\n            name=\"username\"\n            autoComplete=\"off\"\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n          />\n\n          <br />\n          <label className=\"sign-in-form-text\">Password:</label>\n          <br />\n          <input\n            className=\"sign-in-form-input\"\n            type=\"password\"\n            name=\"password\"\n            autoComplete=\"off\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n\n          <br />\n          <input\n            className=\"sign-in-form-submit\"\n            type=\"submit\"\n            value=\"Sign In\"\n          />\n        </form>\n        <span style={{ color: \"red\" }}>{error ? error : null}</span>\n        <p className=\"no-account-text\">\n          Don't have an account?{\" \"}\n          <Link className=\"sign-up-link\" to=\"/user/signup\">\n            Sign Up Here!\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default SignInPage;\n","import React, { useState } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { createUser } from \"../../../api/fetchCalls\";\nimport Loader from \"../../Loader/Loader\";\n\nconst SignUpPage = ({ setUser }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n  let history = useHistory();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (!username || !password || !confirmPassword) {\n      setError(\"Cannot Leave Any Field Blank\");\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      setError(\"Passwords Do Not Match.\");\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      return;\n    }\n    setLoading(true);\n    const user = {\n      username: username,\n      password: password,\n    };\n    const res = await Promise.resolve(createUser(user));\n    setLoading(false);\n    if (res.err) {\n      setError(res.err);\n      return;\n    } else {\n      localStorage.setItem(\"user\", JSON.stringify(res.user));\n      setUser(res.user);\n      history.push(\"/project\");\n    }\n  };\n\n  return (\n    <div>\n      {loading ? <Loader /> : null}\n      <div className=\"sign-in-div\">\n        <div className=\"sign-in-text\">\n          <p>\n            Sign up for <span>Too-Doo</span>\n          </p>\n        </div>\n\n        <form className=\"sign-in-form\" onSubmit={handleSubmit}>\n          <label className=\"sign-in-form-text\"> Username: </label>\n          <br />\n          <input\n            type=\"text\"\n            className=\"sign-in-form-input\"\n            autoComplete=\"off\"\n            name=\"username\"\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <br />\n          <label className=\"sign-in-form-text\">Password:</label>\n          <br />\n          <input\n            type=\"password\"\n            className=\"sign-in-form-input\"\n            autoComplete=\"off\"\n            name=\"password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <br />\n          <label className=\"sign-in-form-text\">Confirm Password:</label> <br />\n          <input\n            type=\"password\"\n            className=\"sign-in-form-input\"\n            autoComplete=\"off\"\n            name=\"confirmPassword\"\n            value={confirmPassword}\n            onChange={(event) => setConfirmPassword(event.target.value)}\n          />\n          <br />\n          <input\n            className=\"sign-in-form-submit\"\n            type=\"submit\"\n            value=\"Create Account\"\n          />\n        </form>\n        <span style={{ color: \"red\" }}>{error ? error : null}</span>\n        <p className=\"no-account-text\">\n          Already have an account?{\" \"}\n          <Link className=\"sign-up-link\" to=\"/user/signin\">\n            Sign In\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Project.css\";\n\nconst Project = ({ project, setPDelete, setProjToDelete }) => {\n  return (\n    <div className=\"project mw700 df-row df-space-between\">\n      <div className=\"project-information\">\n        <p className=\"project-title\">\n          {project.title}{\" \"}\n          <span className=\"project-description\">{project.description}</span>\n        </p>\n        <p className=\"project-tasks\">{project.tasks.length} Tasks</p>\n      </div>\n      <div className=\"df-row\">\n        <div className=\"project-link\">\n          <Link to={`/project/${project._id}`}>View</Link>\n        </div>\n        <div className=\"project-link\">\n          <p\n            href=\"#\"\n            className=\"project-link\"\n            onClick={() => {\n              setPDelete(true);\n              setProjToDelete(project);\n            }}\n          >\n            Delete\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Project;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { deleteProject } from \"../../../api/fetchCalls\";\n\nconst ProjectDelete = ({ projToDelete, setPDelete }) => {\n  let history = useHistory();\n  let id = projToDelete._id;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    await Promise.resolve(deleteProject(id));\n    setTimeout(() => {\n      history.push(\"/project\");\n    }, 1000);\n  };\n\n  return (\n    <div className=\"delete-modal df-col\">\n      <div className=\"delete-modal-content\">\n        <form onSubmit={handleSubmit}>\n          <label className=\"delete-modal-label\">\n            Are you Sure you want to delete this project?\n          </label>\n          <br />\n          <div className=\"delete-modal-button-container df-row\">\n            <input\n              className=\"delete-modal-button button\"\n              type=\"submit\"\n              value=\"Yes\"\n            />\n            <input\n              className=\"delete-modal-button button\"\n              type=\"button\"\n              value=\"Cancel\"\n              onClick={() => setPDelete(false)}\n            />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectDelete;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { createProject } from \"../../../api/fetchCalls\";\n\nconst ProjectCreate = ({ user, setPCreate }) => {\n  let history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const project = {\n      title: title,\n      description: description,\n    };\n    await Promise.resolve(createProject(project, user));\n    setPCreate(false);\n    setTimeout(() => history.push(\"/project\"), 1000);\n  };\n\n  return (\n    <div className=\"create-modal\">\n      <div className=\"create-modal-content\">\n        <div className=\"create-modal-exit\" onClick={() => setPCreate(false)}>\n          X\n        </div>\n        <div className=\"create-modal-title\">Create New Project</div>\n        <form onSubmit={handleSubmit}>\n          <label className=\"sign-in-form-text\">Title</label>\n          <br />\n          <input\n            className=\"create-modal-input\"\n            type=\"text\"\n            onChange={(event) => setTitle(event.target.value)}\n            value={title}\n          />\n\n          <br />\n          <label className=\"sign-in-form-text\">Description </label>\n          <br />\n          <input\n            className=\"create-modal-input\"\n            type=\"text\"\n            onChange={(event) => setDescription(event.target.value)}\n            value={description}\n          />\n\n          <br />\n          <input\n            className=\"create-modal-submit button\"\n            type=\"submit\"\n            value=\"Create\"\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectCreate;\n","import React, { useEffect, useState } from \"react\";\nimport { fetchProjects } from \"../../../api/fetchCalls\";\nimport Project from \"../Project\";\nimport ProjectDelete from \"../ProjectDelete/ProjectDelete\";\nimport ProjectCreate from \"../ProjectCreate/ProjectCreate\";\nimport Loader from \"../../Loader/Loader\";\n\nconst ProjectPage = ({ user }) => {\n  const [loading, setLoading] = useState(false);\n  //states to determine project deletion\n  const [pdelete, setPDelete] = useState(false);\n  const [projToDelete, setProjToDelete] = useState(null);\n  //states to determine project creation\n  const [pcreate, setPCreate] = useState(false);\n  const projects = useProjects(user, setLoading, setPDelete, setProjToDelete);\n\n  const handleProjectCreate = () => {\n    setPCreate(true);\n  };\n\n  return (\n    <div className=\"view-container\">\n      {loading ? <Loader /> : null}\n      <div className=\"df-col\">\n        <div className=\"header mw700 df-row df-space-between\">\n          <div className=\"user-info\">\n            <p className=\"welcome-text\">Hello {user.username}!</p>\n            <p className=\"project-number\">\n              You have {projects ? projects.length : 0} project(s)\n            </p>\n          </div>\n          <div className=\"create-project-button\" onClick={handleProjectCreate}>\n            <p>Create New Project</p>\n          </div>\n        </div>\n        {pdelete ? (\n          <ProjectDelete projToDelete={projToDelete} setPDelete={setPDelete} />\n        ) : null}\n\n        {pcreate ? <ProjectCreate user={user} setPCreate={setPCreate} /> : null}\n\n        <div className=\"df-col \">{projects}</div>\n      </div>\n    </div>\n  );\n};\n\nconst useProjects = (user, setLoading, setPDelete, setProjToDelete) => {\n  const [project, setProject] = useState(null);\n\n  useEffect(() => {\n    const getProjects = async () => {\n      setLoading(true);\n      setProject(await Promise.resolve(fetchProjects(user)));\n      setLoading(false);\n    };\n    getProjects();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let projectArray = [];\n  for (let i in project) {\n    projectArray.push(\n      <Project\n        project={project[i]}\n        setPDelete={setPDelete}\n        setProjToDelete={setProjToDelete}\n        key={i}\n      />\n    );\n  }\n\n  return projectArray;\n};\n\nexport default ProjectPage;\n","import React, { useState } from \"react\";\nimport \"./Task.css\";\nimport { updateTaskCompletion } from \"../../api/fetchCalls\";\n\nconst Task = ({ task, setTaskDelete, setTaskToDelete }) => {\n  const [completed, setCompleted] = useState(task.completed);\n\n  const handleCheck = () => {\n    updateTaskCompletion(task);\n  };\n\n  return (\n    <div className=\" task df-row\">\n      <div className=\"section-1 df-row\">\n        <input\n          className=\"task-checkbox\"\n          type=\"checkbox\"\n          checked={completed}\n          onChange={() => {\n            task.completed = !task.completed;\n            setCompleted(task.completed);\n            handleCheck();\n          }}\n        />\n        <div className={`${completed ? \"completed\" : null} task-desc`}>\n          {task.description}\n        </div>\n      </div>\n      <div className=\"section-2 df-row\">\n        <div className={`${task.priority} priority df-row`}>\n          {task.priority} Priority\n        </div>\n        <div\n          className=\"project-link\"\n          style={{\n            width: \"40%\",\n            paddingLeft: \"1em\",\n            textAlign: \"right\",\n            marginRight: \"0\",\n          }}\n        >\n          <p\n            href=\"#\"\n            className=\"project-link\"\n            onClick={() => {\n              setTaskDelete(true);\n              setTaskToDelete(task);\n            }}\n          >\n            Delete\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Task;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { createTask } from \"../../../api/fetchCalls\";\n\nconst TaskCreate = ({ projid, setTCreate }) => {\n  let history = useHistory();\n  const [description, setDescription] = useState(\"\");\n  const [priority, setPriority] = useState(\"\");\n\n  const handleDescription = (event) => {\n    setDescription(event.target.value);\n  };\n\n  const handlePriority = (event) => {\n    setPriority(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const task = {\n      description: description,\n      priority: priority,\n      project: projid,\n    };\n    await Promise.resolve(createTask(task));\n    setTimeout(() => history.push(`/project/${projid}`), 1000);\n  };\n\n  return (\n    <div className=\"create-modal\">\n      <div className=\"create-modal-content\">\n        <div className=\"create-modal-exit\" onClick={() => setTCreate(false)}>\n          X\n        </div>\n        <div className=\"create-modal-title\">Create New Task</div>\n        <form onSubmit={handleSubmit}>\n          <label className=\"sign-in-form-text\">Description</label>\n          <br />\n          <input\n            className=\"create-modal-input\"\n            type=\"text\"\n            name=\"description\"\n            value={description}\n            onChange={handleDescription}\n          />\n\n          <br />\n          <label onChange={handlePriority}>\n            <div className=\"priority-label\">Priority</div>\n            <br />\n            <label className=\"create-modal-radio-label\">\n              <input\n                className=\"create-modal-radio\"\n                type=\"radio\"\n                name=\"priority\"\n                value=\"Low\"\n              />\n              Low\n            </label>\n            <label className=\"create-modal-radio-label\">\n              <input\n                className=\"create-modal-radio\"\n                type=\"radio\"\n                name=\"priority\"\n                value=\"Medium\"\n              />\n              Medium\n            </label>\n            <label className=\"create-modal-radio-label\">\n              <input\n                className=\"create-modal-radio\"\n                type=\"radio\"\n                name=\"priority\"\n                value=\"High\"\n              />\n              High\n            </label>\n          </label>\n          <br />\n          <input\n            className=\"create-modal-submit button task-create-submit\"\n            type=\"submit\"\n            value=\"Add\"\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskCreate;\n","import React from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { deleteTask } from \"../../../api/fetchCalls\";\n\nconst TaskDelete = ({ taskToDelete, setTaskDelete }) => {\n  let history = useHistory();\n  let { url } = useRouteMatch();\n  let id = taskToDelete._id;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    await Promise.resolve(deleteTask(id));\n    setTimeout(() => {\n      setTaskDelete(false);\n      history.push(url);\n    }, 500);\n  };\n\n  return (\n    <div className=\"delete-modal df-col\">\n      <div className=\"delete-modal-content\">\n        <form onSubmit={handleSubmit}>\n          <label className=\"delete-modal-label\">\n            Are you Sure you want to delete this task?\n          </label>\n          <br />\n          <div className=\"delete-modal-button-container df-row\">\n            <input\n              className=\"delete-modal-button button\"\n              type=\"submit\"\n              value=\"Yes\"\n            />\n            <input\n              className=\"delete-modal-button button\"\n              type=\"button\"\n              value=\"Cancel\"\n              onClick={() => setTaskDelete(false)}\n            />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskDelete;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { fetchProject } from \"../../../api/fetchCalls\";\nimport Task from \"../../Task/Task\";\nimport TaskCreate from \"../../Task/TaskCreate/TaskCreate\";\nimport TaskDelete from \"../../Task/TaskDelete/TaskDelete\";\nimport Loader from \"../../Loader/Loader\";\n\nconst ProjectView = () => {\n  const [busy, setBusy] = useState(true);\n  const [order, setOrder] = useState(1); //1 for low to high -1 for high to low\n  const [taskDelete, setTaskDelete] = useState(false);\n  const [taskToDelete, setTaskToDelete] = useState(null);\n  //states to determine task creation\n  const [tcreate, setTCreate] = useState(false);\n\n  const { projid } = useParams();\n\n  const project = useProject(projid, setBusy);\n  let tasks = getTasks(project, order, setTaskDelete, setTaskToDelete);\n\n  let history = useHistory();\n\n  const handleArrow = () => {\n    history.push(\"/project\");\n  };\n\n  return busy ? (\n    <Loader />\n  ) : (\n    <div className=\"view-container\">\n      {tcreate ? <TaskCreate setTCreate={setTCreate} projid={projid} /> : null}\n      <div className=\"project-view-top\">\n        <div className=\"df-row df-space-between mw700 center\">\n          <div className=\"df-row \">\n            <i\n              onClick={handleArrow}\n              className=\"fas fa-arrow-left fa-3x toparrow\"\n            ></i>\n          </div>\n          <div className=\"df-col\">\n            <p className=\"project-view-project-title\">{project.title}</p>{\" \"}\n            <p className=\"project-view-project-description\">\n              {project.description}\n            </p>\n          </div>\n          <div></div>\n        </div>\n      </div>\n\n      <div className=\"project-view-task-body mw700 df-col\">\n        <div className=\"task-body-top df-row df-space-between\">\n          <div className=\"section-1\">\n            <span className=\"task-body-top-title\">Too-Doo Tasks</span>{\" \"}\n            <span className=\"task-body-top-count\">\n              ({project.tasks.length} Tasks)\n            </span>\n          </div>\n          <div className=\"section-2 df-row\" style={{ alignItems: \"flex-end\" }}>\n            <div\n              className=\"sort-div\"\n              onClick={() => {\n                setOrder(order === 1 ? -1 : 1);\n                sortTasks(tasks, order);\n              }}\n            >\n              Sort By <i className=\"fas fa-sort\"></i>\n            </div>\n            <div\n              style={{\n                width: \"fit-content\",\n                marginRight: \"1em\",\n                marginBottom: \".5em\",\n              }}\n            >\n              <div\n                className=\"create-project-button\"\n                onClick={() => setTCreate(true)}\n              >\n                <p>New Task</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        {taskDelete ? (\n          <TaskDelete\n            setTaskDelete={setTaskDelete}\n            taskToDelete={taskToDelete}\n          />\n        ) : null}\n        <div className=\"task-container\">{tasks}</div>\n      </div>\n    </div>\n  );\n};\n\nconst useProject = (id, setBusy) => {\n  const [project, setProject] = useState(null);\n  useEffect(() => {\n    const fetchProjectAPI = async () => {\n      await fetchProject(id).then((response) => {\n        setBusy(true);\n        setProject(response);\n        setBusy(false);\n      });\n    };\n    fetchProjectAPI();\n  }, [id, setBusy]);\n  return project;\n};\n\nconst getTasks = (project, order, taskDelete, setTaskToDelete) => {\n  if (!project) return;\n  let taskArray = [];\n  project.tasks = sortTasks(project.tasks, order);\n  for (let i in project.tasks) {\n    taskArray.push(\n      <Task\n        key={i}\n        task={project.tasks[i]}\n        setTaskDelete={taskDelete}\n        setTaskToDelete={setTaskToDelete}\n      />\n    );\n  }\n  return taskArray;\n};\n\nconst sortTasks = (tasks, sortOrder) => {\n  tasks.sort((a, b) => {\n    if (\n      a.priority === \"High\" &&\n      (b.priority === \"Low\" || b.priority === \"Medium\")\n    ) {\n      return sortOrder === 1 ? -1 : 1;\n    }\n    if (\n      a.priority === \"Low\" &&\n      (b.priority === \"High\" || b.priority === \"Medium\")\n    ) {\n      return sortOrder === 1 ? 1 : -1;\n    }\n    if (a.priority === \"Medium\" && b.priority === \"High\") {\n      return sortOrder === 1 ? 1 : -1;\n    }\n    if (a.priority === \"Medium\" && b.priority === \"Low\") {\n      return sortOrder === 1 ? -1 : 1;\n    }\n    return 0;\n  });\n  return tasks;\n};\n\nexport default ProjectView;\n","import React from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport ProjectPage from \"./ProjectPage/ProjectPage\";\nimport ProjectDelete from \"./ProjectDelete/ProjectDelete\";\nimport ProjectView from \"./ProjectView/ProjectView\";\n\nconst ProjectMain = ({ user, setProjects }) => {\n  let history = useHistory();\n  const handleLogout = () => {\n    localStorage.clear();\n    history.push(\"/signin\");\n  };\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"top-bar df-row\">\n        <div className=\"topbar-content-container mw700 df-row df-space-between\">\n          <div>Too-Doo</div>\n          <div className=\"topbar-logout\" onClick={handleLogout}>\n            Log Out <i className=\"fas fa-sign-out-alt\"></i>\n          </div>\n        </div>\n      </div>\n      <div className=\"df-col\">\n        <Switch>\n          <Route\n            path=\"/project\"\n            exact\n            component={() => <ProjectPage user={user} />}\n          />\n          <Route\n            path=\"/project/:id/delete\"\n            exact\n            component={() => <ProjectDelete />}\n          />\n          <Route\n            path=\"/project/:projid\"\n            exact\n            component={() => <ProjectView />}\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectMain;\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { fetchUserStorage } from \"./api/fetchCalls\";\nimport SignInPage from \"./components/SignIn/SignInPage/SignInPage\";\nimport SignUpPage from \"./components/SignIn/SignUpPage/SignUpPage\";\nimport ProjectMain from \"./components/Project/ProjectMain\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  const [user, setUser] = useState(fetchUserStorage());\n  const [projects, setProjects] = useState([]);\n\n  return (\n    <Switch>\n      <Route\n        path=\"/user/signin\"\n        exact\n        component={() => <SignInPage setUser={setUser} />}\n      />\n      <Route\n        path=\"/user/signup\"\n        exact\n        component={() => <SignUpPage setUser={setUser} />}\n      />\n      <Route\n        path=\"/project\"\n        component={() => <ProjectMain user={user} setProjects={setProjects} />}\n      />\n      <Redirect from=\"/\" to=\"/user/signin\" />\n    </Switch>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}